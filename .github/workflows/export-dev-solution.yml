name: Dev to Prod (Cross-Tenant) Unmanaged Deployment

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - "solutions/**"

jobs:
  dev-to-prod:
    runs-on: ubuntu-latest
    env:
      SOLUTION_NAME: emp_leave

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2️⃣ Install Power Platform CLI
      - name: Install PAC CLI
        uses: microsoft/powerplatform-actions/actions-install@v1

      # 3️⃣ Create unique filename using timestamp
      - name: Set unique filename
        id: set_filename
        run: |
          echo "file_name=${{ env.SOLUTION_NAME }}_Unmanaged_$(date +'%Y%m%d_%H%M%S').zip" >> $GITHUB_ENV

      # 4️⃣ Export solution from Dev tenant
      - name: Export solution from Dev
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{ secrets.PP_DEV_URL }}
          tenant-id: ${{ secrets.PP_DEV_TENANT_ID }}
          app-id: ${{ secrets.PP_DEV_CLIENT_ID }}
          client-secret: ${{ secrets.PP_DEV_CLIENT_SECRET }}
          solution-name: ${{ env.SOLUTION_NAME }}
          managed: false
          overwrite: true
          solution-output-file: solutions/${{ env.file_name }}

      # 5️⃣ Upload exported solution as artifact
      - name: Upload exported solution
        uses: actions/upload-artifact@v4
        with:
          name: exported-solution
          path: solutions/${{ env.file_name }}

  import-to-prod:
    runs-on: ubuntu-latest
    needs: dev-to-prod
    env:
      SOLUTION_NAME: emp_leave

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2️⃣ Install PAC CLI
      - name: Install PAC CLI
        uses: microsoft/powerplatform-actions/actions-install@v1

      # 3️⃣ Download exported solution artifact
      - name: Download exported solution
        uses: actions/download-artifact@v4
        with:
          name: exported-solution
          path: solutions/

      # 4️⃣ Get solution file name safely
      - name: Get solution file name
        id: getfile
        run: |
          FILE=$(ls solutions/*.zip | head -n1)
          echo "SOLUTION_FILE<<EOF" >> $GITHUB_ENV
          echo "$FILE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # 5️⃣ Authenticate to Prod tenant
      - name: WhoAmI (Prod)
        uses: microsoft/powerplatform-actions/who-am-i@v1
        with:
          environment-url: ${{ secrets.PP_PROD_URL }}
          tenant-id: ${{ secrets.PP_TENANT_ID }}
          app-id: ${{ secrets.PP_CLIENT_ID }}
          client-secret: ${{ secrets.PP_CLIENT_SECRET }}

      # 6️⃣ Import solution to Prod
      - name: Import solution to Prod
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: ${{ secrets.PP_PROD_URL }}
          tenant-id: ${{ secrets.PP_TENANT_ID }}
          app-id: ${{ secrets.PP_CLIENT_ID }}
          client-secret: ${{ secrets.PP_CLIENT_SECRET }}
          solution-file: ${{ env.SOLUTION_FILE }}
          publish-changes: false
          overwrite-unmanaged-customizations: true

      # 7️⃣ Publish customizations safely using PAC CLI path
      - name: Publish customizations
        run: |
         ${{ env.POWERPLATFORMTOOLS_PACPATH }} auth create \
          --url ${{ secrets.PP_PROD_URL }} \
          --client-id ${{ secrets.PP_PROD_CLIENT_ID }} \
          --client-secret ${{ secrets.PP_PROD_CLIENT_SECRET }} \
          --tenant-id ${{ secrets.PP_PROD_TENANT_ID }} \
          --name ProdAuth

         ${{ env.POWERPLATFORMTOOLS_PACPATH }} solution publish \
          --environment ProdAuth \
          --name ${{ env.SOLUTION_NAME }}
